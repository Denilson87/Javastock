
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Denilson
 */
public class Mercadoria extends javax.swing.JFrame {
    
 Vector x = new Vector();
 int indice=0;
 int compraQ=0;
//----------------------------Conexao Base de Dados---------------------------------
private String driver="com.mysql.jdbc.Driver";
private String url="jdbc:mysql://localhost:3306/sgv?zeroDateTimeBehavior=convertToNull";
private String user="root";
private String pass="";
private Connection con=null;
private Statement sta=null;
private ResultSet resultado=null; 
//-------------------___--------------___----------------------------___------------
    /**
     * Creates new form 
     */
    public Mercadoria() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); 
   //---------------------------------------------------------------------------
        ImageIcon ic =new ImageIcon(this.getClass().getResource("folder/cl.png"));
        //--------------------------------------------------------
        URL url=this.getClass().getResource("folder/JFR.png");
        Image i =Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(i); 
        //--------------------------------------------------------
//        ic.setImage(ic.getImage().getScaledInstance(clean.getWidth(),clean.getHeight(),1)); 
//        clean.setBackground(new Color (0,0,0,0));
//        clean.setIcon(ic);
        
        
        
       //-----------------------------
        prencher();
        //-----------------------------
        Nome();
        //-----------------------------
        CBO();
        //----------------------------
        jTable1.setRowHeight(17);
       
        cboF.setSelectedIndex(-1);
        lblX.setVisible(false);
        this.setTitle("DIAMOD GEST. Registar Mercadoria");
    }

    
    public void color(int q){
        if(q<=30){txtSt.setForeground(Color.red);lblX.setVisible(true);}else{txtSt.setForeground(new Color(0,204,0));
        lblX.setVisible(false);
        }
    }
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        CboProdutos = new javax.swing.JComboBox();
        txtCProduto = new javax.swing.JTextField();
        txtQ = new javax.swing.JTextField();
        txtPr = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        cboF = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        txtSt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblX = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtV = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtDesconto = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        butRegistar = new javax.swing.JButton();
        butAtualizar = new javax.swing.JButton();
        butProcura = new javax.swing.JButton();
        butApagar = new javax.swing.JButton();
        butC = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(247, 247, 247));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(0, 60, 201));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel2.setText(" Nome do Produto:");

        jLabel5.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel5.setText("Quantidades:");

        jLabel11.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel11.setText("Código do Produto:");

        jLabel6.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel6.setText("Valor Pago:");

        jLabel7.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel7.setText("Preço de Compra:");

        CboProdutos.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        CboProdutos.setForeground(new java.awt.Color(255, 255, 255));
        CboProdutos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione"}));
        CboProdutos.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                CboProdutosAncestorResized(evt);
            }
        });
        CboProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CboProdutosActionPerformed(evt);
            }
        });
        CboProdutos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CboProdutosKeyPressed(evt);
            }
        });

        txtCProduto.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        txtQ.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        txtQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQActionPerformed(evt);
            }
        });
        txtQ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQKeyReleased(evt);
            }
        });

        txtPr.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        txtPr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrKeyTyped(evt);
            }
        });

        txtValor.setEditable(false);
        txtValor.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel15.setText("Fornecedor:");

        jButton1.setBackground(new java.awt.Color(247, 247, 247));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/add.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/View.png"))); // NOI18N

        cboF.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        cboF.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(CboProdutos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel2))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtQ, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtPr, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboF, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 13, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jLabel6)
                                .addGap(47, 47, 47)
                                .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CboProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtCProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtQ, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPr, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cboF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 60, 201));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setOpaque(false);

        txtSt.setEditable(false);
        txtSt.setFont(new java.awt.Font("Consolas", 0, 40)); // NOI18N
        txtSt.setForeground(new java.awt.Color(0, 204, 0));
        txtSt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 20)); // NOI18N
        jLabel1.setText("Quantidade disponivel em Stock:");

        lblX.setBackground(new java.awt.Color(255, 0, 0));
        lblX.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        lblX.setForeground(new java.awt.Color(255, 255, 255));
        lblX.setText(" X Quantidade da Mercadoria Em risco de Acabar");
        lblX.setOpaque(true);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSt)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblX)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSt, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblX)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel8.setText("Informação da Mercadoria");

        jPanel6.setBackground(new java.awt.Color(0, 60, 201));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.setOpaque(false);

        jLabel4.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel4.setText("Preço de Venda:");

        txtV.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel12.setText("Aplicar Desconto:");

        txtDesconto.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtV, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel12)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtDesconto, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtV, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setOpaque(false);

        jTable1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo:", "Nome Mercadoria:", "Quantidade:", "Preço de Compra:", "Preço de Venda:", "Desconto"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(100);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
        );

        jLabel9.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel9.setText("Mercadoria Registada");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setOpaque(false);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/First record.gif"))); // NOI18N
        jButton3.setText("Primeiro");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/Next track.gif"))); // NOI18N
        jButton4.setText(" Próximo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/Last recor.gif"))); // NOI18N
        jButton5.setText(" Último");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/Previous record.gif"))); // NOI18N
        jButton6.setText("Anterior");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel3.setText("Ir para:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addGap(15, 15, 15))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel13.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel13.setText("Condições de Venda");

        jLabel14.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel14.setText("Navegadores");

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setOpaque(false);

        butRegistar.setBackground(new java.awt.Color(255, 255, 255));
        butRegistar.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        butRegistar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/Save.gif"))); // NOI18N
        butRegistar.setText("Registar");
        butRegistar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butRegistar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRegistarActionPerformed(evt);
            }
        });

        butAtualizar.setBackground(new java.awt.Color(255, 255, 255));
        butAtualizar.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        butAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/Modify.gif"))); // NOI18N
        butAtualizar.setText("Atualizar");
        butAtualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAtualizarActionPerformed(evt);
            }
        });

        butProcura.setBackground(new java.awt.Color(255, 255, 255));
        butProcura.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        butProcura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/Find.png"))); // NOI18N
        butProcura.setText("Procurar");
        butProcura.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butProcura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butProcuraActionPerformed(evt);
            }
        });

        butApagar.setBackground(new java.awt.Color(255, 255, 255));
        butApagar.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        butApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/Deletes.png"))); // NOI18N
        butApagar.setText(" Eliminar");
        butApagar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butApagarActionPerformed(evt);
            }
        });

        butC.setBackground(new java.awt.Color(255, 255, 255));
        butC.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        butC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/Create.gif"))); // NOI18N
        butC.setText(" Novo");
        butC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/Home.png"))); // NOI18N
        jButton2.setText("Menu >");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder/Report.gif"))); // NOI18N
        jButton7.setText("  Fatura ");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(butC, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(butRegistar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(butAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(butProcura, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(butApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butRegistar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butProcura, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butC, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 11, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jLabel10.setText("Botões de Operações ");

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204), 3));

        jLabel18.setFont(new java.awt.Font("sansserif", 0, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 153, 204));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("   Gestão de Stock e Vendas");

        jLabel16.setFont(new java.awt.Font("sansserif", 0, 40)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 153, 204));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("DIAMOND GEST");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel10)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(8, 8, 8)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butApagarActionPerformed
      if(CboProdutos.getSelectedItem().toString()!="Selecione"){
        apagar();
      }else{JOptionPane.showMessageDialog(null,"Verifique se o campo o nome do Produto, \n"
              + "esta preenchido com nome de um produto.", "Alerta",JOptionPane.ERROR_MESSAGE);}
    }//GEN-LAST:event_butApagarActionPerformed

    private void butProcuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butProcuraActionPerformed
       if(CboProdutos.getSelectedItem().toString()!="Selecione"){
        Pesquisar();
       }else{JOptionPane.showMessageDialog(null,"Verifique se o campo o nome do Produto, \n"
              + "esta preenchido com nome de um produto.","Alerta",JOptionPane.ERROR_MESSAGE); }
    }//GEN-LAST:event_butProcuraActionPerformed

    private void butAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAtualizarActionPerformed
      if(CboProdutos.getSelectedItem().toString()!="Selecione"){ 
        this.update();
        
      }  else{JOptionPane.showMessageDialog(null,"Verifique se o campo o nome do Produto, \n"
              + "esta preenchido com nome de um produto.","Alerta", JOptionPane.ERROR_MESSAGE);}
    }//GEN-LAST:event_butAtualizarActionPerformed

    private void butRegistarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRegistarActionPerformed
      if(CboProdutos.getSelectedItem().toString().length()!=0 && txtCProduto.getText().length()!=0&&txtQ.getText().length()!=0&&
        txtPr.getText().length()!=0&& txtValor.getText().length()!=0 && txtV.getText().length()!=0&&
         txtDesconto.getText().length()!=0&&cboF.getSelectedItem().toString().length()!=0){
        
        
        
      insert(CboProdutos.getSelectedItem().toString(),Integer.parseInt(txtCProduto.getText()),Integer.parseInt(txtQ.getText()),
              Double.parseDouble(txtPr.getText()), Double.parseDouble(txtValor.getText()), Double.parseDouble(txtV.getText()),
              Double.parseDouble(txtDesconto.getText()),cboF.getSelectedItem().toString());
      
      
      }else{JOptionPane.showMessageDialog(null,"Verifique se preencheu os seguintes campos:\n"
              + "- Nome do Produto \n"
              + "- Quantidade \n"
              + "- Preco de Compra \n"
              + "- Fornecedor \n"
              + "- Preco de venda \n"
              + "- Aplicar Desconto", "Alerta",JOptionPane.ERROR_MESSAGE);}
    }//GEN-LAST:event_butRegistarActionPerformed

    private void CboProdutosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CboProdutosKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_CboProdutosKeyPressed

    private void CboProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CboProdutosActionPerformed
     
        this. Pesquisar();
    }//GEN-LAST:event_CboProdutosActionPerformed

    private void txtPrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrKeyPressed
        // Cancular o valor pago
        
    }//GEN-LAST:event_txtPrKeyPressed

    private void txtPrKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrKeyReleased
        // TODO add your handling code here:
        valor();
    }//GEN-LAST:event_txtPrKeyReleased

    private void txtPrKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrKeyTyped
        // TODO add your handling code here:
       // valor();
    }//GEN-LAST:event_txtPrKeyTyped

    private void butCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCActionPerformed
     //--------------------------Limpar campos-----------
            butC.setBackground(Color.green); 
                txtCProduto.setText(null);
                txtQ.setText(null);
                txtPr.setText(null);
                txtValor.setText(null);
                txtV.setText(null);
                lblX.setVisible(false);
                CboProdutos.setSelectedItem("Selecione");
            JOptionPane.showMessageDialog(null,"Campos Limpos");
            butC.setBackground(Color.white); 
                
                
        //------------------------------------------------------------
    }//GEN-LAST:event_butCActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
        Menu a = new Menu();
        a.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        first();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        next();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        last();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        previos();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
      int indice=jTable1.getSelectedRow();
      TableModel model = jTable1.getModel();
      this.index(indice);
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtStActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStActionPerformed

    private void CboProdutosAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_CboProdutosAncestorResized
        // TODO add your handling code here:
    }//GEN-LAST:event_CboProdutosAncestorResized

    private void txtQKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQKeyReleased
      
    }//GEN-LAST:event_txtQKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     try{
        if(txtQ.getText().length()!=0){
        String quantidade =JOptionPane.showInputDialog("Escreva a Nova Quantidade Comprada?");
        //----------------------------------
        compraQ=Integer.parseInt(quantidade);
        
        //----------------------------------
        int q =Integer.parseInt(txtQ.getText());
        int soma=Integer.parseInt(quantidade)+q;
        color(soma);
        
        txtQ.setText(soma+"");
        txtSt.setText(" "+soma+" Unidades");
        valor();
       } else {JOptionPane.showMessageDialog(null, "Escreva a quantidade no campo");}
        }catch(NumberFormatException e){
           //JOptionPane.showMessageDialog(null, "Falha no calculo");
           
       }
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
    GerarR();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void txtQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQActionPerformed

    
  
    
    
    public void GerarR() {
      
        try{
            Class.forName(driver);
         
            this.con=DriverManager.getConnection(url, user, pass);
            
       HashMap map =new HashMap();
       
       JasperPrint rel=JasperFillManager.fillReport("src/Fatura.jasper", map, con);
       
       JasperViewer v = new  JasperViewer (rel,false);
      
       v.setVisible(true);
            
       }catch(Exception e){ JOptionPane.showMessageDialog(null,"Falha ao Gerar","Erro",JOptionPane.WARNING_MESSAGE);
       System.out.println(e);
       }
    }
    
    public void index(int inde){
   
    LoginS a;
    
    a=(LoginS)x.get(inde);  
       mostra(a);
    
    }
    
    
    public void valor(){
        
        try{
             
    int q =Integer.parseInt(txtQ.getText());
    double p =Double.parseDouble(txtPr.getText());
    
     double Valor=q*p;
     
    txtValor.setText(Valor+"");
        }catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "Falha no Cálculo");
           
       }
    }
    
    
    
    public void Input(){
        //--------------------------Limpar campos-----------
                txtCProduto.setText(null);
                txtQ.setText(null);
                txtPr.setText(null);
                txtValor.setText(null);
                txtV.setText(null);
                
        //------------------------------------------------------------
        int Codigo=0;
    try{
        
           Class.forName(driver);
           
           this.con=DriverManager.getConnection(url, user, pass);
           sta=con.createStatement();


           String query1="select codP from Produto where nomeP =('"+CboProdutos.getSelectedItem().toString()+"')";  
           this.resultado=sta.executeQuery(query1);
            
           while(resultado.next()){
              
              Codigo= resultado.getInt("codP");
              txtCProduto.setText(Codigo+"");
            }
       //-------------------------------------------------------
           
          String query2="select * from mercadoria where nome_produto=('"+CboProdutos.getSelectedItem().toString()+"')";
            
          this.resultado=sta.executeQuery(query2);
            
          while(resultado.next()){                       
                                
              txtQ.setText(resultado.getInt("Quantidade")+"");
              txtPr.setText(resultado.getDouble("preco")+"");
              txtValor.setText(resultado.getDouble("valor")+"");
              txtV.setText(resultado.getDouble("P_venda")+""); 
              
            }
             
          
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha na busca de dados \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "numero"); 
       }    
    }
    
    
    
    
    
    public void insert (String Produto,int codigo,int Quant,double PrecoUni,double Valor,double precoVenda, double Desconto,String Fonte){
        
       try{
           
           Class.forName(driver);
           
          this.con=DriverManager.getConnection(url, user, pass);
           sta=con.createStatement();

String query1="insert into mercadoria (nome_produto,"
        + "id_Produto,"
        + "Quantidade,"
        + "preco,"
        + "valor,"
        +"P_venda,"
         +"Descontos,"
        + "Fornecedor) VALUES ('"+Produto+"','"+codigo +"','"+Quant +"','"+PrecoUni+"','"+Valor+"','"+precoVenda+"','"+Desconto+"','"+Fonte+"')";
          sta.execute(query1);
           JOptionPane.showMessageDialog(null, "Mercadoria Registada no Armazém"); prencher();
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha no registo da mercadoria \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro de Inserção", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "Falha de numero"); 
       }
       
   }
   
    
    
    //-----------------------------------------------------------------------------------
    public void Compra (String Produto,int Quantidade,double PrecoCompra){
        
       try{
           
           Class.forName(driver);
           
          this.con=DriverManager.getConnection(url, user, pass);
           sta=con.createStatement();

String query100="insert into compra (Produto_C,"
        + "Quantidade,"
        + "Preco ) VALUES "
        + "('"+Produto+"','"+Quantidade +"','"+PrecoCompra +"')";
          sta.execute(query100);
          
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha no registo da Compra \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro de Inserção", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "Falha de numero"); 
       }
       
   }
   
    //-----------------------------------------------------------------------------------
    
    
    public void CBO(){
        try{
           
           Class.forName(driver);
           
          this.con=DriverManager.getConnection(url, user, pass);
          sta=con.createStatement();

          String query22="select * from produto";
            
          this.resultado=sta.executeQuery(query22);
            
          while(resultado.next()){
                
              CboProdutos.addItem(resultado.getString("nomeP"));
                        
            }

       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha na busca dos Produtos CBO \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro", JOptionPane.ERROR_MESSAGE);
           System.out.println(e);
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "numero"); 
       }    
        
        
    }
    
    
     public void delete (String nome){
       try{
           Class.forName(driver);
           
          this.con=DriverManager.getConnection(url, user, pass);
           sta=con.createStatement();

           String query1=" delete from mercadoria where nome_produto = '"+nome.toString()+"'"; 
          
           sta.execute(query1);
           JOptionPane.showMessageDialog(null, "Mercadoria Eliminado");
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha ao eliminar dados \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "numero"); 
       }
       
   }
       
 
     
     public void update (){
       try{
           Class.forName(driver);
         
          this.con=DriverManager.getConnection(url, user, pass);
           sta=con.createStatement();
           String queryS="UPDATE mercadoria SET "     
                   + "Quantidade ='"+txtQ.getText()+""+"',"
                   + "preco='"+txtPr.getText()+""+"',"
                   + "valor='"+txtValor.getText()+""+"',"
                   + "P_venda='"+  txtV.getText()+""+"',"
                   + "Descontos='"+  txtDesconto.getText()+""+"'," 
                   + "Fornecedor='"+  cboF.getSelectedItem().toString()+"'"  
                   + " WHERE nome_produto='"+CboProdutos.getSelectedItem().toString()+"'";
           
           //String query1="update produto set (nomeP,categoriaP,foto,Descricao,prateleira) VALUES ('"+nome.toString()+"','"+Categoria.toString() +"','"+ foto.toString()+"','"+Descricao.toString()+"','"+PR +"')";
          //String query1="insert into produto (nomeP,categoriaP,foto,Descricao,prateleira) Values ('Amendoim','Alimentos','djjdj','idffifdifj',7)";
           sta.execute(queryS);
           JOptionPane.showMessageDialog(null, "Mercadoria Actualizada");prencher();
           
       this.Compra(CboProdutos.getSelectedItem().toString(),compraQ , Double.parseDouble(txtPr.getText()));   
       compraQ=0;
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha ao atualizar dados \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro de atualização ", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "numero"); 
       }
       
   }
    
    
    
     public void Procurar(){
         
                txtCProduto.setText(null);
                txtQ.setText(null);
                txtPr.setText(null);
                txtValor.setText(null);
                txtV.setText(null);
                txtDesconto.setText(null); 
                cboF.setSelectedIndex(-1);
         //-----------------------------------------
          int Codigo=0;
        try{
           
           Class.forName(driver);
           
          this.con=DriverManager.getConnection(url, user, pass);
           sta=con.createStatement();
             
           
           
          String query1="select codP from Produto where nomeP =('"+CboProdutos.getSelectedItem().toString()+"')";  
           this.resultado=sta.executeQuery(query1);
            
           while(resultado.next()){
              
              Codigo= resultado.getInt("codP");
              txtCProduto.setText(Codigo+""); 
            }
        //----------------------------------------------------------------------------------------------------------------
           String query2="select * from mercadoria where nome_produto=('"+CboProdutos.getSelectedItem().toString()+"')";
            
          this.resultado=sta.executeQuery(query2);
            
          while(resultado.next()){                       
                                
              txtQ.setText(resultado.getInt("Quantidade")+"");
              txtPr.setText(resultado.getDouble("preco")+"");
              txtValor.setText(resultado.getDouble("valor")+"");
              txtV.setText(resultado.getDouble("P_venda")+""); 
              txtDesconto.setText(resultado.getDouble("Descontos")+""); 
              cboF.setSelectedItem(resultado.getString("Fornecedor")); 
              
            }
             
          
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha na busca de dados \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "numero"); 
       }    
        
        
    }
    
     
     
    
    
    
    
     public void prencher(){
        LoginS a;
         try{
           
           Class.forName(driver);
           
           DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
           String [] linha= new String [6];
           //--------------------Limpando tabela----------------------------

          ((DefaultTableModel)jTable1.getModel()).setNumRows(0); 
          
           jTable1.updateUI(); 
           //---------------------------------------------------------------
           //Limpando Vector
             for(int i =0;i<x.size();i++){
             x.removeAllElements();
             }
         //---------------------------------------------------------------- 
          this.con=DriverManager.getConnection(url, user, pass);
           sta=con.createStatement();

         String query11="select * from mercadoria order by id_mercadoria asc";
            
          this.resultado=sta.executeQuery(query11);
            
          while(resultado.next()){    
              
            //Alimentandp vector-----------------------------------------------------------------------------------------------------------------
           vectorFood(resultado.getString("nome_produto"),resultado.getInt("id_Produto"),resultado.getInt("Quantidade"),resultado.getDouble("preco"),
                     resultado.getDouble("valor"),resultado.getDouble("P_venda"),resultado.getDouble("Descontos"),resultado.getString("Fornecedor"));   
            //------------------------------------------------------------------------------------------------------------------------------------
           
             linha[0]= resultado.getString("id_mercadoria")+"";
             linha[1]=resultado.getString("nome_produto")+""; 
             linha[2]=resultado.getString("Quantidade");
             linha[3]=resultado.getString("preco");
             linha[4]=resultado.getString("P_venda")+"";
             linha[5]=resultado.getString("Descontos")+"";
           
          
          
            model.addRow(linha); 
            }  
          
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha na busca dos Produtos \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro de Pesquisa", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "numero"); 
       }
        }
    
  //---------------------------------Usando Vector------------------------------------------------------------------------------
      public void vectorFood(String Produto,int codigo,int Quant,double PrecoUni,double Valor,double precoVenda,double desconto,String Fonte){
         LoginS a = new LoginS();
       
         a.NomeProduto=Produto;
         a.codProduto=codigo;
         a.quantidades=Quant;
         a.precoCompra=PrecoUni;
         a.valorPago=Valor;
         a.precoVenda=precoVenda;
         a.desconto=desconto; 
         a.Stock=Quant;
         a.fonte=Fonte; 
         //txtFonte.setText(" "+a.fonte+" Unidades"); 
         x.addElement(a);
    }
     
      public void Codigo(){
       int Codigo=0;
    try{
        
           Class.forName(driver);
           
           this.con=DriverManager.getConnection(url, user, pass);
           sta=con.createStatement();


           String query1="select id from mercadoria where nome_produto =('"+CboProdutos.getSelectedItem().toString()+"') ";  
           this.resultado=sta.executeQuery(query1);
            
           while(resultado.next()){
              
              Codigo= resultado.getInt("id_mercadoria");
              txtCProduto.setText(Codigo+"");
            }
            }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha na busca de dados \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "numero"); 
       }    
      }
      
      
      
      
    public void Pesquisar(){
    
     try {
     LoginS a;
     String Produto;
     Produto=CboProdutos.getSelectedItem().toString();
          
                txtCProduto.setText(null);
                txtQ.setText(null);
                txtPr.setText(null);
                txtValor.setText(null);
                txtV.setText(null);
                txtDesconto.setText(null);
                txtSt.setText(null);
                cboF.setSelectedIndex(-1);
                lblX.setVisible(false);
                
                
                Codigo();
     
     for(int i=0;i<x.size();i++){
         
     a=(LoginS)x.get(i);
      
     if(a.NomeProduto.equals( Produto)){
         
         color(a.quantidades);
         
        txtCProduto.setText(a.codProduto+"");
        txtQ.setText(a.quantidades+"");
        txtPr.setText(a.precoCompra+"");
        txtValor.setText(a.valorPago+"");   
        txtV.setText(a.precoVenda+"");
        txtDesconto.setText(a.desconto+"");
        txtSt.setText(" "+a.Stock+" Unidades"); 
        cboF.setSelectedItem(a.fonte);
              
      } }
      }catch(Exception e){
      
      } }
    
    
    
    
    public void apagar(){
       try {  
        LoginS a;
        String Produto;
        Produto=CboProdutos.getSelectedItem().toString();
         
        for(int i =0;i<x.size();i++){
             
        a=(LoginS)x.get(i);        
        if(a.NomeProduto.equals( Produto)){
             
        x.removeElementAt(i);  
        
        txtCProduto.setText(null);
        txtQ.setText(null);
        txtPr.setText(null);
        txtValor.setText(null);
        txtV.setText(null); 
        txtDesconto.setText(null);
        txtSt.setText(null);
        cboF.setSelectedIndex(-1);
        
        } }
         JOptionPane.showMessageDialog(null,"Mercadoria Apagada do Vector!");
         deleteVector();
        } catch(Exception e){JOptionPane.showMessageDialog(null,"Falha ao apagar");}
     }
    
    
    
    public void deleteVector (){
       try{
            try {
           Class.forName(driver);
           
          this.con=DriverManager.getConnection(url, user, pass);
           sta=con.createStatement();

           String query1=" delete from mercadoria where nome_produto = '"+CboProdutos.getSelectedItem().toString()+"'";   
         
           sta.execute(query1);
           
          //---------------------------------
            txtCProduto.setText(null);
            txtQ.setText(null);
            txtPr.setText(null);
            txtValor.setText(null);
            txtV.setText(null);   
            txtDesconto.setText(null);
            cboF.setSelectedIndex(-1);
          //-------------------------------
            
           JOptionPane.showMessageDialog(null, "Mercadoria Eliminado"); this.prencher();
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha ao eliminar Mercadoria \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "Falha de numero"); 
       }
             } catch (Exception e) {JOptionPane.showMessageDialog(null,"Verifique os campos se estao preenchidos"); 
       }
       
   }
    
    
    
    public void Atualizar(){
        try{   
       LoginS a;
        String Produto;
        Produto=CboProdutos.getSelectedItem().toString();
        
        for(int i=0;i<x.size();i++){
        a=(LoginS)x.get(i);
        if(a.NomeProduto.equals( Produto)){
            
        a.NomeProduto=CboProdutos.getSelectedItem().toString();
         a.codProduto=Integer.parseInt(txtCProduto.getText());
         a.quantidades=Integer.parseInt(txtQ.getText());
         a.precoCompra=Double.parseDouble(txtPr.getText());
         a.valorPago=Double.parseDouble(txtValor.getText());
         a.precoVenda=Double.parseDouble(txtV.getText());
         a.desconto=Double.parseDouble(txtDesconto.getText());
         a.fonte=cboF.getSelectedItem().toString();
         
         x.setElementAt(a,i);
         JOptionPane.showMessageDialog(null,"Guardado");
        
         updateVector ();
        }    }   
        } catch(Exception e){JOptionPane.showMessageDialog(null,"Falha ao atualizar");}
    }
    
    
    
    
    public void updateVector (){
       try{
            try {
    LoginS a;
    String cod=CboProdutos.getSelectedItem().toString();
    
          Class.forName(driver);
          this.con=DriverManager.getConnection(url, user, pass);
          sta=con.createStatement();
           
        for(int i=0;i<x.size();i++){ a=(LoginS)x.get(i);
             if(a.NomeProduto.equals(cod)){
                 
           String queryS="UPDATE mercadoria SET "
                   + "Quantidade ='"+a.quantidades+""+"',"
                   + "preco='"+a.precoCompra+""+"',"
                   + "valor='"+a.valorPago+""+"',"
                   + "P_venda='"+a.precoVenda+""+"',"
                   + "Descontos='"+a.desconto+""+"',"
                   + "Fornecedor='"+a.fonte+""+"'"
                   + " WHERE nome_produto='"+CboProdutos.getSelectedItem().toString()+"'";
           sta.execute(queryS);
        }}
           JOptionPane.showMessageDialog(null, "Mercadoria Actualizada");prencher();
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha ao atualizar Mercadoria \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro de atualização ", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "falha de numero"); 
       }
       } catch (Exception e) {JOptionPane.showMessageDialog(null,"Verifique os campos"); 
       }
   }
    
    ///------------------------------------------------------------------------------------------------------------
    public void first(){
         try {
    restore();
    LoginS a;
    
    if(x.size()>0){
    indice=0;   
       
    a=(LoginS)x.get(indice);
    mostra(a);
    } }catch(Exception e){JOptionPane.showMessageDialog(null,"Dados Nao Encontrados"); }
         }
    
    
    public void last(){
          try {
    restore();
    LoginS a;
    
    if(x.size()>0){
       indice=x.size()-1;
       a=(LoginS) x.get(indice);
       mostra(a); 
   } }catch(Exception e){JOptionPane.showMessageDialog(null,"Dados Nao Encontrados"); }
          }
    
    
   public void next(){
        try {
   restore();
   LoginS a;
    
   if(x.size()>0){
     
     if(indice<x.size()-1){
         indice++;
         
       a=(LoginS) x.get(indice);
       mostra(a);
       
     }}}catch(Exception e){JOptionPane.showMessageDialog(null,"Dados Nao Encontrados"); }
        }
   
   public void previos(){
       try {
    restore();
    LoginS a;
 
     if(x.size()>0){
      
      if(indice>0){
          indice --;
       a=(LoginS)x.get(indice); 
       mostra(a);
       
      }}}catch(Exception e){JOptionPane.showMessageDialog(null,"Dados Nao Encontrados"); }
       }
   
   
    public void mostra(LoginS a ){
        color(a.quantidades);
        
        CboProdutos.setSelectedItem(a.NomeProduto);
        txtCProduto.setText(a.codProduto+"");
        txtQ.setText(a.quantidades+"");
        txtPr.setText(a.precoCompra+"");
        txtValor.setText(a.valorPago+"");
        txtV.setText(a.precoVenda+""); 
        txtDesconto.setText(a.desconto+""); 
        txtSt.setText(" "+a.Stock+" Unidades");
        cboF.setSelectedItem(a.fonte); 
     }
   
    
    
    
    
     public void Nome(){
         
        try{
           
          Class.forName(driver);
           
          this.con=DriverManager.getConnection(url, user, pass);
          sta=con.createStatement();

           
          String query0="Select Nome from fornecedor";
            
          this.resultado=sta.executeQuery(query0);
            
          while(resultado.next()){
                
             cboF.addItem(resultado.getString("Nome"));
            
            }

       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha na busca do fornecedor \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro de Busca", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "numero"); 
       }
        
    }
    
    
     
     
     
      public void Combo(){
          
        try{
           
           Class.forName(driver);
           
          this.con=DriverManager.getConnection(url, user, pass);
           sta=con.createStatement();
           
           String query01=" select * from produto";
            
          this.resultado=sta.executeQuery(query01);
            
          while(resultado.next()){
              
           CboProdutos.addItem(resultado.getString("nomeP"));
           
          }

       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha na busca do produto \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro", JOptionPane.ERROR_MESSAGE);
         //System.out.println(e);
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "Falha no numero"); 
       }
    }
    
    
      
      
    public void restore(){
        try{
         
           LoginS a;
         //---------------------------------------------------------------
           //Limpando Vector
             for(int i =0;i<x.size();i++){
             x.removeAllElements();
             }
         //---------------------------------------------------------------- 
           Class.forName(driver);
             this.con=DriverManager.getConnection(url, user, pass);
           sta=con.createStatement();

         String query8="select * from mercadoria order by id_Produto asc";
            
          this.resultado=sta.executeQuery(query8);
            
          while(resultado.next()){    
              
            //Alimentandp vector-----------------------------------------------------------------------------------------------------------------
           vectorFood(resultado.getString("nome_produto"),resultado.getInt("id_Produto"),resultado.getInt("Quantidade"),resultado.getDouble("preco"),
                     resultado.getDouble("valor"),resultado.getDouble("P_venda"),resultado.getDouble("Descontos"),resultado.getString("Fornecedor"));   
            //------------------------------------------------------------------------------------------------------------------------------------
           
            }  
          
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Falha na busca dos Produtos \n"
                   + "Descrição do erro: \n"
                   + "- "+e+" ","Erro de Pesquisa", JOptionPane.ERROR_MESSAGE);
           
       }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(null, "Driver ");  
       }
       catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "numero"); 
       }
        
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mercadoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mercadoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mercadoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mercadoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mercadoria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CboProdutos;
    private javax.swing.JButton butApagar;
    private javax.swing.JButton butAtualizar;
    private javax.swing.JButton butC;
    private javax.swing.JButton butProcura;
    private javax.swing.JButton butRegistar;
    private javax.swing.JComboBox cboF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblX;
    private javax.swing.JTextField txtCProduto;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtPr;
    private javax.swing.JTextField txtQ;
    private javax.swing.JTextField txtSt;
    private javax.swing.JTextField txtV;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

    private void vectorFood(String string, int aInt, int aInt0, double aDouble, double aDouble0, double aDouble1, String string0) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
